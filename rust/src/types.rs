use phf::phf_map;

#[derive(Clone, Debug)]
pub(crate) struct UFC_PACKAGE{
    pub(crate) area_1: AREA_1_PACKAGE,
    pub(crate) odu: Vec<ODU_PACKAGE>,
    pub(crate) comms: Vec<COMMS_PACKAGE>,
}

#[derive(Clone, Debug)]
pub(crate) struct AREA_1_PACKAGE{
    pub(crate) chars: Vec<char>,
}

#[derive(Clone, Debug)]
pub(crate) struct ODU_PACKAGE{
    pub(crate) id: u8,
    pub(crate) is_selected: bool,
    pub(crate) text: String,
}

#[derive(Clone, Debug)]
pub(crate) struct COMMS_PACKAGE{
    pub(crate) is_left: bool,
    pub(crate) char: char,
}

pub(crate) static AREA_1_BITS: phf::Map<&'static str, u32> = phf_map! {
    "O_1"      => 97,
    "J_1"      => 96,
    "H_1"      => 95,
    "C_1"      => 94,
    "K_1"      => 93,
    "L_1"      => 92,
    "D_1"      => 91,
    "A_1"      => 90,
    "P_1"      => 89,
    "M_1"      => 88,
    "E_1"      => 87,
    "B_1"      => 86,
    "N_1"      => 85,
    "I_1"      => 84,
    "F_1"      => 83,
    "G_1"      => 82,

    "O_2"      => 81,
    "J_2"      => 80,
    "H_2"      => 79,
    "C_2"      => 78,
    "K_2"      => 77,
    "L_2"      => 76,
    "D_2"      => 75,
    "A_2"      => 74,
    "P_2"      => 73,
    "M_2"      => 72,
    "E_2"      => 71,
    "B_2"      => 70,
    "N_2"      => 69,
    "I_2"      => 68,
    "F_2"      => 67,
    "G_2"      => 66,

    "E_3"      => 64,
    "G_3"      => 63,
    "F_3"      => 62,
    "D_3"      => 61,
    "C_3"      => 60,
    "B_3"      => 59,
    "A_3"      => 58,

    "E_4"      => 56,
    "G_4"      => 55,
    "F_4"      => 54,
    "D_4"      => 53,
    "C_4"      => 52,
    "B_4"      => 51,
    "A_4"      => 50,

    "E_5"      => 48,
    "G_5"      => 47,
    "F_5"      => 46,
    "D_5"      => 45,
    "C_5"      => 44,
    "B_5"      => 43,
    "A_5"      => 42,

    "E_6"      => 40,
    "G_6"      => 39,
    "F_6"      => 38,
    "D_6"      => 37,
    "C_6"      => 36,
    "B_6"      => 35,
    "A_6"      => 34,

    "E_7"      => 32,
    "G_7"      => 31,
    "F_7"      => 30,
    "D_7"      => 29,
    "C_7"      => 28,
    "B_7"      => 27,
    "A_7"      => 26,

    "E_8"      => 24,
    "G_8"      => 23,
    "F_8"      => 22,
    "D_8"      => 21,
    "C_8"      => 20,
    "B_8"      => 19,
    "A_8"      => 18,

    "E_9"      => 16,
    "G_9"      => 15,
    "F_9"      => 14,
    "D_9"      => 13,
    "C_9"      => 12,
    "B_9"      => 11,
    "A_9"      => 10,
};

pub(crate) static ODU_BITS: phf::Map<&'static str, u32> = phf_map! {
    ":"  =>97,
    "O_1"=>93,
    "J_1"=>92,
    "H_1"=>91,
    "C_1"=>90,
    "K_1"=>89,
    "L_1"=>88,
    "D_1"=>87,
    "A_1"=>86,
    "P_1"=>85,
    "M_1"=>84,
    "E_1"=>83,
    "B_1"=>82,
    "N_1"=>81,
    "I_1"=>80,
    "F_1"=>79,
    "G_1"=>78,
    "O_2"=>77,
    "J_2"=>76,
    "H_2"=>75,
    "C_2"=>74,
    "K_2"=>73,
    "L_2"=>72,
    "D_2"=>71,
    "A_2"=>70,
    "P_2"=>69,
    "M_2"=>68,
    "E_2"=>67,
    "B_2"=>66,
    "N_2"=>65,
    "I_2"=>64,
    "F_2"=>63,
    "G_2"=>62,
    "O_3"=>61,
    "J_3"=>60,
    "H_3"=>59,
    "C_3"=>58,
    "K_3"=>57,
    "L_3"=>56,
    "D_3"=>55,
    "A_3"=>54,
    "P_3"=>53,
    "M_3"=>52,
    "E_3"=>51,
    "B_3"=>50,
    "N_3"=>49,
    "I_3"=>48,
    "F_3"=>47,
    "G_3"=>46,
    "O_4"=>45,
    "J_4"=>44,
    "H_4"=>43,
    "C_4"=>42,
    "K_4"=>41,
    "L_4"=>40,
    "D_4"=>39,
    "A_4"=>38,
    "P_4"=>37,
    "M_4"=>36,
    "E_4"=>35,
    "B_4"=>34,
    "N_4"=>33,
    "I_4"=>32,
    "F_4"=>31,
    "G_4"=>30,
};

pub(crate) static COMMS_BITS: phf::Map<&'static str, u32> = phf_map! {
    "N_Left" =>93,
    "P_Left" =>92,
    "L_Left" =>91,
    "O_Left" =>90,
    "M_Left" =>89,
    "I_Left" =>88,
    "K_Left" =>87,
    "J_Left" =>86,
    "G_Left" =>85,
    "F_Left" =>84,
    "H_Left" =>83,
    "C_Left" =>82,
    "B_Left" =>81,
    "E_Left" =>80,
    "D_Left" =>79,
    "A_Left" =>78,
    "N_Right"=>77,
    "P_Right"=>76,
    "L_Right"=>75,
    "O_Right"=>74,
    "M_Right"=>73,
    "I_Right"=>72,
    "K_Right"=>71,
    "J_Right"=>70,
    "G_Right"=>69,
    "F_Right"=>68,
    "H_Right"=>67,
    "C_Right"=>66,
    "B_Right"=>65,
    "E_Right"=>64,
    "D_Right"=>63,
    "A_Right"=>62,
};

// number (eg. the 2 in F_2) has to be added manually after the fact
pub(crate) static SIXTEEN_SEGMENT_LETTER_LOOKUP: phf::Map<&'static str, &'static str> = phf_map!{
    "A" => "JCABGNHI",
    "B" => "ABIOPLEGN",
    "C" => "JCABOP",
    "D" => "ELABOPGN",
    "E" => "ABOPHCJ",
    "F" => "ABCJH",
    "G" => "ABCJOPNI",
    "H" => "CJGNHI",
    "I" => "ABOPEL",
    "J" => "GNOPJ",
    "K" => "CJHIFN",
    "L" => "CJOP",
    "M" => "JCDFGN",
    "N" => "JCDMNG",
    "O" => "ABGNOPJC",
    "P" => "JCABGHI",
    "Q" => "ABGNOPJCM",
    "R" => "JCABGIHM",
    "S" => "ABDINPO",
    "T" => "LEAB",
    "U" => "CJOPNG",
    "V" => "CJKF",
    "W" => "CJKMNG",
    "X" => "DMKF",
    "Y" => "CHIGL",
    "Z" => "ABFKOP",
    "0" => "ABGNOPCJKF",
    "1" => "EL",
    "2" => "ABGHIJOP",
    "3" => "ABGINOP",
    "4" => "CHIGN",
    "5" => "ABCHINOP",
    "6" => "ABCJOPNHI",
    "7" => "ABGN",
    "8" => "ABHIOPJNCG",
    "9" => "ABCGHINOP",
    "/" => "ABCDEFGHIJKLMNOP"
};

pub(crate) static SEVEN_SEGMENT_LETTER_LOOKUP: phf::Map<&'static str, &'static str> = phf_map!{
    "A" => "EFABCG",
    "B" => "FEDCG",
    "C" => "AFED",
    "D" => "GEDCB",
    "E" => "AFGED",
    "F" => "AFEDCG",
    "G" => "FECB",
    "H" => "FEGC",
    "I" => "FE",
    "J" => "BCDE",
    "K" => "FEGCB",
    "L" => "FED",
    "M" => "EGCA",
    "N" => "EFABC",
    "O" => "FABCDE",
    "P" => "EFABG",
    "Q" => "CFABG",
    "R" => "EG",
    "S" => "AFGCD",
    "T" => "FGED",
    "U" => "FEDCB",
    "V" => "FDB",
    "W" => "FGBD",
    "X" => "AGD",
    "Y" => "FGBCD",
    "Z" => "ABGED",
    "0" => "ABCDEF",
    "1" => "BC",
    "2" => "ABGED",
    "3" => "ABCDG",
    "4" => "FGBC",
    "5" => "AFGCD",
    "6" => "AFEDCG",
    "7" => "ABC",
    "8" => "ABCDEFG",
    "9" => "ABCFG",
    "." => "CDEG"
};